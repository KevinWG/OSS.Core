using Microsoft.OpenApi.Models;
using Swashbuckle.AspNetCore.SwaggerUI;

namespace {{solution_name}};

internal static class SwaggerHelper
{
    /// <summary>
    /// 注入Swagger服务
    /// </summary>
    /// <param name="Services"></param>
    internal static void RegisterSwaggerService(IServiceCollection Services)
    {
        Services.AddSwaggerGen(c =>
        {
            c.SwaggerDoc("v1", new OpenApiInfo { Title = "{{module_display}} WebApi", Version = "v1" });

            var xmlFileDir = Path.Combine(AppContext.BaseDirectory, "AppGlobal", "XmlDocs");
            var xmlFiles  = Directory.GetFiles(xmlFileDir, "*.xml");

            foreach (var xml in xmlFiles)
            {
                c.IncludeXmlComments(xml);
            }

            // 添加 请求头 方案
            c.AddSecurityDefinition("Bearer", new OpenApiSecurityScheme
            {
                Name = "Authorization",
                Description = "请输入用户登陆获取的Token",
                In = ParameterLocation.Header,
                Type = SecuritySchemeType.ApiKey
            });
            // 添加接口传输请求
            var securityRequirement = new OpenApiSecurityRequirement
            {
                {
                    new OpenApiSecurityScheme
                    {
                        Reference = new OpenApiReference
                        {
                            Type = ReferenceType.SecurityScheme,
                            Id = "Bearer"
                        }
                    },
                    Array.Empty<string>()
                }
            };
            c.AddSecurityRequirement(securityRequirement);
        });
    }



    /// <summary>
    ///  注入 Swagger UI展示页面
    /// </summary>
    /// <param name="app"></param>
    internal static void AddSwaggerUI(WebApplication app)
    {
        app.UseSwaggerUI(c =>
        {
            c.DefaultModelRendering(ModelRendering.Model);
            c.DocExpansion(DocExpansion.None);
            c.DisplayRequestDuration();
            c.EnableDeepLinking();
        });
    }

}