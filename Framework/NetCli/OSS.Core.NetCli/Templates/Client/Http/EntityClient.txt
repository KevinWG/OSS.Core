using OSS.Common;
using OSS.Common.Resp;
using OSS.Core.Client.Http;

namespace {solution_name}.Client;

internal class {entity_name}HttpClient : I{entity_name}OpenService
{
    /// <summary>
    ///  查询列表
    /// </summary>
    /// <returns></returns>
    public Task<PageListResp<{entity_name}Mo>> Search(SearchReq req)
    {
          return new {module_req}("/{entity_name}/Search")
            .PostAsync<PageListResp<{entity_name}Mo>>(req);
    }

    /// <summary>
    ///  通过id获取详情
    /// </summary>
    /// <param name="id"></param>
    /// <returns></returns>
    public Task<IResp<{entity_name}Mo>> Get(long id)
    {
          return new {module_req}($"/{entity_name}/Get?id={id}")
            .GetAsync<IResp<{entity_name}Mo>>();
    }

    /// <summary>
    ///  通过id获取有效可用详情
    /// </summary>
    /// <param name="id"></param>
    /// <returns></returns>
    public Task<IResp<{entity_name}Mo>> GetUseable(long id)
    {
          return new {module_req}($"/{entity_name}/GetUseable?id={id}")
            .GetAsync<IResp<{entity_name}Mo>>();
    }
    
    /// <summary>
    ///  设置可用状态
    /// </summary>
    /// <param name="id"></param>
    /// <param name="flag">可用标识 1-可用 ， 0-不可用</param>
    /// <returns></returns>
    public Task<IResp> SetUseable(long id, ushort flag)
    {
          return new {module_req}($"/{entity_name}/SetUseable?id={id}&flag={flag}")
            .PostAsync<IResp>();
    }

    /// <summary>
    ///  添加对象
    /// </summary>
    /// <param name="req"></param>
    /// <returns></returns>
    public Task<LongResp> Add(Add{entity_name}Req req)
    {
          return new {module_req}("/{entity_name}/Add")
            .PostAsync<LongResp>(req);
    }
}
