using OSS.Common;
using OSS.Common.Resp;
using OSS.Core.Domain;

namespace {solution_name};

/// <summary>
///  {entity_name} 服务
/// </summary>
public class {entity_name}Service : I{entity_name}OpenService
{
    private static readonly {rep_define};


    /// <inheritdoc />
    public async Task<PageListResp<{entity_name}Mo>> Search(SearchReq req)
    {
        return new PageListResp<{entity_name}Mo>(await _{entity_name}Rep.Search(req));
    }

    /// <inheritdoc />
    public async Task<IResp<{entity_name}Mo>> Get(long id)
    {
        var  getRes = await _{entity_name}Rep.GetById(id);
        return getRes.IsSuccess() ? getRes : new Resp<{entity_name}Mo>().WithErrMsg("未能找到{entity_name}信息");
    }

    /// <inheritdoc />
    public async Task<IResp<{entity_name}Mo>> GetUseable(long id)
    {
        var getRes = await Get(id);
        return getRes.IsSuccess() && getRes.data.status >= 0 ? getRes : new Resp<{entity_name}Mo>().WithErrMsg("未能找到有效的{entity_name}信息");
    }

    /// <inheritdoc />
    public Task<IResp> SetUseable(long id, ushort flag)
    {
        return _{entity_name}Rep.UpdateStatus(id, flag == 1 ? CommonStatus.Original : CommonStatus.UnActive);
    }

    /// <inheritdoc />
    public async Task<LongResp> Add(Add{entity_name}Req req)
    {
        var mo = req.MapTo{entity_name}Mo();

        await _{entity_name}Rep.Add(mo);
        return new LongResp(mo.id);
    }
}